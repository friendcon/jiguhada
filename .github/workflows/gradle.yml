# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-gradle

name: Jiguhada CI/CD
on:
  # master 브랜치에 push, pull_request 될 때 workflow 를 실행하겠다는 의미
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

permissions:
  contents: read

jobs:
  build:
    # build 실행 환경
    runs-on: ubuntu-latest
    # task 의 sequence 를 명시
    steps:
    # 최근 버전을 참조하겠다는 의미
    - uses: actions/checkout@v3
    
    # JDK 설치 
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        
    # gradlew 에 실행 권한 부여
    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
      
    # gradlew build 명령 실행
    - name: Build with Gradle
      run: ./gradlew build

    # 전송 파일을 저장할 디렉토리 생성
    - name: Make Directory for delivery
      run: mkdir deploy

    # jar 파일 copy
    - name: Copy Jar
      run: cp ./build/libs/*.jar ./deploy/

    # appspec.yml copy
    - name: Copy appspec
      run: cp appspec.yml ./deploy/

    # deploy.sh copy
    - name: Copy deploy.sh
      run: cp deploy.sh ./deploy/

    # 압축 파일 형태로 전달
    - name: make zip file
      run: zip -r -qq -j ./jiguhada-build.zip ./deploy

    # S3 버킷으로 zip 파일 업로드
    - name: Delivery to S3
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      run:
        aws s3 cp --region ap-northeast-2 --acl private ./jiguhada-build.zip s3://jiguhada-deploy/

    # Deploy
    - name: Deploy
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      run:
        aws deploy create-deployment --application-name jiguhada --deployment-group-name jiguhada-group --file-exists-behavior OVERWRITE --s3-location bucket=jiguhada-deploy,bundleType=zip,key=jiguhada-build.zip --region ap-northeast-2